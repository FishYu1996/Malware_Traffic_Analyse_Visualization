# coding=UTF-8
class ByteOrder(object):
    order = "big"
    @staticmethod
    def bytes2int(data, ord=""):
        if ord == "":
            ord = ByteOrder.order
        ord = int.from_bytes(data,ord)
        return ord

class ByteTool(object):
    @staticmethod
    def disassembleBytes(Bytes, start, end):
        binData = bin(int.from_bytes(Bytes, "big")).replace('0b', '')
        bytesLen = len(Bytes)
        if len(binData) == 0:
            binData = ""
            while bytesLen > 0:
                binData = binData + "00000000"
                bytesLen -= 1
        while len(binData) % 8 != 0 :
            binData = "0" + binData
        binData = binData[start:end+1]
        handleInt = int(binData, 2)
        return handleInt


