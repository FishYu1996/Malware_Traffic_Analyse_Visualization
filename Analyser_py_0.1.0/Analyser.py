# coding=UTF-8
import MySQLdb

def get_data(sql):
    conn = MySQLdb.connect("localhost", "root", "root", "Test")
    cursor = conn.cursor()
    # 查询test表中id为11的记录，并将记录数目返回给count
    cursor.execute(sql)
    # 重置游标位置，0,为偏移量，mode＝absolute | relative,默认为relative,
    cursor.scroll(0, mode='absolute')
    results = cursor.fetchall()
    conn.close()
    return results

def Node_Length_Analyse(nodes):
    max=200
    min=0
    prop=0
    all=0
    sum=0
    propdic={}
    for node in nodes:
        sql="SELECT length FROM `data` where srcIp='"+node+"'or dscIp='"+node+"'"
        results=get_data(sql)
        for result in results:
            all+=1
            if result[0]>min and result[0]<max:
                sum+=1
        prop=float(sum)/all
        propdic[node]=prop
        sum=0
        all=0
        ordered_propdic = sorted(propdic.items(), key=lambda x: x[1], reverse=True)

    return ordered_propdic


def Node_Links_Analyse(nodes):
    Links={}
    for node in nodes:
        sql="SELECT sum(count) FROM `link` where IP1='"+node+"'OR IP2='"+node+"'"
        results=get_data(sql)
        for result in results:
            Links[node]=result[0]
        ordered_Links = sorted(Links.items(), key=lambda x: x[1], reverse=True)
    return ordered_Links

def Wrong_Matched_Port():
    IPs={}
    sql="select srcIp,dscIp from `data` where srcPort=80 AND appProto='null'"
    count=0
    results=get_data(sql)
    for result in results:
        str=result[0]+"->"+result[1]+"     HTTP-80"
        if str in IPs:
            count=IPs[str]
            IPs[str]=count+1
        else:
            count=1
            IPs[str]=count
    IPs = sorted(IPs.items(), key=lambda x: x[1], reverse=True)
    return IPs


