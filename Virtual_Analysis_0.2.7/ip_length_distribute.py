# coding=UTF-8
import networkx as nx
import matplotlib.pyplot as plt
import math
import MySQLdb
import re as re
import sys
from tkinter import *
from PIL import Image, ImageTk



def get_data(sql):
    conn = MySQLdb.connect("localhost", "root", "root", "Test")
    cursor = conn.cursor()
    # 查询test表中id为11的记录，并将记录数目返回给count
    cursor.execute(sql)
    # 重置游标位置，0,为偏移量，mode＝absolute | relative,默认为relative,
    if (cursor.rowcount != 0):
        cursor.scroll(0, mode='absolute')
        results = cursor.fetchall()
    else:
        results = ()
    conn.close()
    return results

sql = "SELECT *  FROM `ip_length_distribute`"
results = get_data(sql)
for result in results:
    type_id=-1
    score=0
    min_score=10000
    length_distributions=re.split(r",   |",result[2])
    del length_distributions[-1]
    protocol_distributions = re.split(r",   |", result[3])
    del protocol_distributions[-1]
    aspects=length_distributions+protocol_distributions
    sql = "SELECT *  FROM `example_distribute`"
    results_2 = get_data(sql)
    now_type=0
    for result_2 in results_2:
        now_type+=1
        ex_length_distributions = re.split(r",   |", result_2[2])
        del ex_length_distributions[-1]
        ex_protocol_distributions = re.split(r",   |", result_2[3])
        del ex_protocol_distributions[-1]
        ex_aspects = ex_length_distributions + ex_protocol_distributions
        i=0;
        while i<20 :
            if abs(float(aspects[i])-float(ex_aspects[i]))>30:
                score = score +10
            score=score+(float(aspects[i])*math.log((float(aspects[i])+0.01)/(float(ex_aspects[i])+0.01))/100.0)
            i+=1
        if score<0:
            score = abs(score)
        if min_score>score:
            min_score=score
            type_id=now_type
        score=0
    if(min_score<1000.5):
        print(result[1])
        print(min_score)
        print(type_id)
    print("***")
#IP = re.split(r"->| ", string)