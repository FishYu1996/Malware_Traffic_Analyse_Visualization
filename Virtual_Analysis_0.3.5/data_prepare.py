# coding=UTF-8
import Pcap_class
import pandas
import pickle


def distribution_collect(packet):
    meta_data = []
    length = packet.get_packet_head().get_real_len()
    src_p = packet.get_transport_head().get_ports()[0]
    dst_p = packet.get_transport_head().get_ports()[1]
    app_raw = packet.get_application_raw()
    meta_data.append(length)
    meta_data.append(src_p)
    meta_data.append(dst_p)
    for i in range(32):
        if app_raw != None:
            while len(app_raw) < 32:
                  app_raw.append(0)
            meta_data.append(app_raw[i])
        else:
            meta_data.append(0)
    return meta_data


if __name__ == '__main__':
    filename = "xunlei_1"
    my_pcap_file = Pcap_class.build_pcap(filename + ".pcap", 4000)
    packets = my_pcap_file.get_packets()
    packet_list = []
    packet_num = 0
    for packet in packets:
        data = distribution_collect(packet)
        packet_list.append(data)
        packet_num += 1
        if packet_num > 4000:
            break
    pd_data = pandas.DataFrame(packet_list, columns=['length', 'Src_port', 'Dst_port', 'data_01', 'data_02', 'data_03',
                                              'data_04', 'data_05', 'data_06', 'data_07', 'data_08', 'data_09',
                                              'data_10', 'data_11', 'data_12', 'data_13', 'data_14',
                                              'data_15', 'data_16', 'data_17', 'data_18', 'data_19', 'data_20',
                                              'data_21', 'data_22', 'data_23', 'data_24', 'data_25',
                                              'data_26', 'data_27', 'data_28', 'data_29', 'data_30', 'data_31',
                                              'data_32'])
    f = open(filename + '.txt', 'wb')
    pickle.dump(pd_data, f)
    f.close()