# coding=UTF-8
import Tkinter as tk
from PIL import Image, ImageTk
import Draw_Graph
import Analyser
menuID=0;
submenuID=0
IPs=[]
submenuFlag=0
def menu_select():
    global  menuID
    global  submenuID
    global  submenuFlag
    if menuID==0:
        submenuID=listbox_main.curselection()
        label_title.config(text=listbox_main.get(submenuID))
        label_textbox.config(text="IP节点                                连接数")
        if submenuID[0]==0:
           draw_initial_graph()
           Func_One_GUI()
           menuID+=1
       #func one
    elif menuID==1:
        if submenuID[0]==0:
            submenuFlag=1
            Choose_Ip()

def menu_return():
    global  menuID
    global  submenuFlag
    if(submenuFlag>0):
        draw_initial_graph()
        submenuFlag = 0
    else:
        menuID-=1
    if menuID==0:
        menus=["IP关系展示",2,3,4,5,6,7,8,9,10]
        label_title.config(text="选择功能")
        label_textbox.config(text="text text text text text text text text text")
        listbox_main.delete(0, 'end')
        for menu in menus:
            listbox_main.insert('end', menu)
        listbox_main.select_set(0)
        select_frame.grid_remove()




def draw_initial_graph():
    global IPs
    IPs = list(Draw_Graph.draw())
    img = Image.open('test.png')  # 打开图片
    photo = ImageTk.PhotoImage(img)  # 用PIL模块的PhotoImage打开
    label_photo.config(image=photo)
    label_photo.image = photo
    Rank(Analyser.Node_Links_Analyse(IPs))

def Choose_Ip():
    string=str(listbox_main.get(listbox_main.curselection()))
    IP=string.split(' ',1)
    IPs=Draw_Graph.draw_SingleIP(IP[0])
    img = Image.open('test.png')  # 打开图片
    photo = ImageTk.PhotoImage(img)  # 用PIL模块的PhotoImage打开
    label_photo.config(image=photo)
    label_photo.image = photo
    label_textbox.config(text="IP节点                                连接数")
    Rank(Analyser.Node_Links_Analyse(IPs))

def Rank(IP_Rank):
    listbox_main.delete(0, 'end')
    for IP in IP_Rank:
        format_string="%(IP)-40s%(Count) 8.2f"%{'IP':IP[0],'Count':IP[1]}
        listbox_main.insert('end', format_string)
    listbox_main.select_set(0)

def Func_One_GUI():
    select_frame.grid(row=2,column=11,rowspan=4,columnspan=4,sticky=tk.NW)


def Func_One_Select():
    if  var.get()==1:
        label_textbox.config(text="IP节点                                点的度")
        Rank(Draw_Graph.degree())
    elif var.get()==2:
        label_textbox.config(text="IP节点                                介数中心性")
        Rank(Draw_Graph.betweeness())
    elif var.get()==3:
        label_textbox.config(text="IP节点                                点度中心性")
        Rank(Draw_Graph.degree_centrality())
    elif var.get()==4:
        label_textbox.config(text="IP节点                                连接数")
        Rank(Analyser.Node_Links_Analyse(IPs))
    elif var.get()==5:
        label_textbox.config(text="IP节点                                小包占比")
        Rank(Analyser.Node_Length_Analyse(IPs))

root = tk.Tk()  # 创建窗口对象的背景色
root.title("App")
root.geometry('1800x900')

img = Image.open('test.png')  # 打开图片
photo = ImageTk.PhotoImage(img)  # 用PIL模块的PhotoImage打开
label_photo=tk.Label(root,width=700, height=500,image=photo)
label_photo.grid(row=0, column=0, rowspan=8, columnspan=8)
label_title=tk.Label(root,width=40,text="选择功能")
label_title.grid(row=0,column=8,columnspan=3)
label_textbox=tk.Label(root,width=40,text="text text text text text text text text text")
label_textbox.grid(row=1,column=8,columnspan=3)
listbox_main=tk.Listbox(root,width=40,height=15,selectmode = tk.SINGLE)
#测试用赋值
IPs=["IP关系展示",2,3,4,5,6,7,8,9,10]
for IP in IPs:
    listbox_main.insert('end', IP)
#以上为测试用
listbox_main.grid(row=2,column=8,rowspan=4,columnspan=3)
listbox_main.select_set(0)
button_summit=tk.Button(root,width=10,text="确定",command=menu_select)
button_summit.grid(row=6,column=8)
button_return2=tk.Button(root,width=10,text="返回",command=menu_return)
button_return2.grid(row=6,column=10)
var = tk.IntVar()
select_frame=tk.Frame(root,width=300,height=300)
radio1 = tk.Radiobutton(select_frame, text='点的度', variable=var, value=1,command=Func_One_Select)
radio2 = tk.Radiobutton(select_frame, text='介数中心性', variable=var, value=2,command=Func_One_Select)
radio3 = tk.Radiobutton(select_frame, text='点度中心性', variable=var, value=3,command=Func_One_Select)
radio4 = tk.Radiobutton(select_frame, text='连接数', variable=var, value=4,command=Func_One_Select)
radio5 = tk.Radiobutton(select_frame, text='小包占比', variable=var, value=5,command=Func_One_Select)
radio1.grid(row=0, column=0, sticky=tk.NW)
radio2.grid(row=1, column=0, sticky=tk.NW)
radio3.grid(row=2, column=0, sticky=tk.NW)
radio4.grid(row=3, column=0, sticky=tk.NW)
radio5.grid(row=4, column=0, sticky=tk.NW)
root.mainloop()