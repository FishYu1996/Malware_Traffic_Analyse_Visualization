import pandas
import pickle
import sklearn.utils
import sklearn
import tensorflow as tf
from sklearn.model_selection import train_test_split
def fileread(filename,isMalware):
    fd=open(filename+'.data','rb')
    data=pickle.load(fd)
    fd.close()
    X=pandas.DataFrame()
    for i in data:
        if(data[i].shape[0]<20):
            continue
        j=0
        while data[i].shape[0]>j+20:
            s=pandas.Series()
            for j in range(j,j+20):
                s=pandas.concat([s,data[i].loc[j]])
            tmp=pandas.DataFrame(s)
            tmp=tmp.T
            X=X.append(tmp)
    Y=pandas.DataFrame([isMalware for i in range(X.shape[0])])
    return X,Y
def data_process(x,y):
    X=pandas.DataFrame()
    Y=pandas.DataFrame()
    for i in x:
        X=X.append(i)
    for i in y:
        Y=Y.append(i)
    X,Y=sklearn.utils.shuffle(X,Y)
    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2)
    return X_train, X_test, y_train, y_test

x_n,y_n=fileread ('web_http.pcap',0)
x_p,y_p=fileread('necurs1.pcap',1)
x_p2,y_p2=fileread('necurs2.pcap',1)
x_p3,y_p3=fileread('necurs3.pcap',1)
x_p4,y_p4=fileread('necurs4.pcap',1)
x_p5,y_p5=fileread('necurs5.pcap',1)

scaler=sklearn.preprocessing.MinMaxScaler(feature_range=(0,1))
X_train, X_test, y_train, y_test=data_process([x_n,x_p,x_p2,x_p3,x_p4,x_p5],[y_n,y_p,y_p2,y_p3,y_p4,y_p5])
X_train=scaler.fit_transform(X_train)
X_test=scaler.fit_transform(X_test)
X_train=X_train.reshape((X_train.shape[0],20,3))
X_test=X_test.reshape((X_test.shape[0],20,3))
model=tf.keras.models.Sequential()
model.add(tf.keras.layers.LSTM(32,input_shape=(20,3)))
model.add(tf.keras.layers.Dense(1,activation='sigmoid'))
model.compile(loss='binary_crossentropy',
              optimizer='rmsprop',
              metrics=['accuracy'])
model.fit(X_train, y_train, batch_size=16, epochs=1000)
score = model.evaluate(X_test, y_test, batch_size=32)
print(score)
model.save('test_model_1.h5')

