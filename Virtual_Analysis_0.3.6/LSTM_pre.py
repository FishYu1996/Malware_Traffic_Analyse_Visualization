import pyshark
import pandas
import pickle
filenamelist=['web_http.pcap','necurs1.pcap','necurs2.pcap','necurs3.pcap','necurs4.pcap','necurs5.pcap']
tshark_path = 'D:\\Wireshark\\tshark.exe'
def data_collect(flowNo,filename):
    flag=TCP_flow_test(flowNo,filename)
    if(flag==0):
        return []
    elif(flag==-1):
        return -1
    caps=pyshark.FileCapture(filename,display_filter='tcp.stream eq %d'%flowNo,tshark_path=tshark_path)
    data=[]
    packet_1=caps[0]
    source_ip=packet_1.ip.src
    destination_ip=packet_1.ip.dst
    for cap in caps:
        cap_data=[]
        cap_data.append(cap.tcp.len)
        cap_data.append(cap.tcp.time_delta)
        if(cap.ip.src==source_ip):
            cap_data.append(1)
        else:
            cap_data.append(0)
        data.append(cap_data)
    caps.close()
    return data
def data_save(data, flows,flowNO):
    pd_data=pandas.DataFrame(data,columns=['length','delta','direction'])
    flows[flowNO]=pd_data.dropna()
    #pd_data.to_csv(r'F:/'+filename+'.csv',mode='a')
    #print(data[: 50])
def TCP_flow_test(flowNo,filename):
    print(flowNo)
    caps=pyshark.FileCapture(filename,display_filter='tcp.stream eq %d'%flowNo,tshark_path=tshark_path)
    packetnumber=0;
    for a in caps:
        packetnumber=packetnumber+1
    caps.close()
    if(packetnumber<20 and packetnumber>0):
        return 0
    elif(packetnumber==0):
        return -1
    else:
        return 1
def main(filenamelist):

    for filename in filenamelist:
        flows={}
        for flowNO in range(0,300):
            data = data_collect(flowNO,filename)
            if(data==-1):
                break
            else:
                data_save(data,flows,flowNO)
        fd=open(filename+'.data','wb')
        pickle.dump(flows,fd)
        fd.close()
main(filenamelist)
