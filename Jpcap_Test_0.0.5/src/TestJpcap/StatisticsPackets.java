package TestJpcap;
import jpcap.JpcapCaptor;
import jpcap.NetworkInterface;
import jpcap.NetworkInterfaceAddress;
import jpcap.packet.IPPacket;
import jpcap.packet.Packet;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Iterator;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class StatisticsPackets {
	Statement stmt ; 
	Connection conn;
	String sql;
	String[] srcIps;
	int[] PacketNumber;
	float[] PacketLength;
	HashMap<String,Integer> PacketCounter;
	public StatisticsPackets() {
		PacketCounter=new HashMap<String,Integer>();
	}
	public void AnalysisEntry(){
		ReadData();
		SavingIps();
		PacketLength();
		PrintData();
	}
	public void LinkDB(){
		try {  
            Class.forName("com.mysql.cj.jdbc.Driver").newInstance();  
  
            String databaseName = "test";// 已经在MySQL数据库中创建好的数据库。  
            String userName = "root";// MySQL默认的root账户名  
            String password = "root";// 默认的root账户密码为空  
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + databaseName+"?useSSL=false&serverTimezone=UTC", userName, password);          
            stmt = conn.createStatement();
            if(conn!=null)
             System.out.println("连接数据库成功！");
            else
             System.out.println("连接数据库失败！");
		 } catch (Exception e) {  
	            e.printStackTrace();  
	     }  
	}
    public void ReadData(){
      LinkDB();
      sql="SELECT srcIp ,COUNT(*) FROM `data` GROUP BY srcIp";
      try {
		ResultSet rs=stmt.executeQuery(sql);
		while(rs.next()){
        	PacketCounter.put(rs.getString(1), rs.getInt(2));
		}
     } catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
     }
   }
   public void SavingIps(){
	   Iterator it = PacketCounter.keySet().iterator();
	   srcIps=new String[PacketCounter.size()];
	   PacketNumber=new int[PacketCounter.size()];
	   int i=0;
       while (it.hasNext()) {
           srcIps[i] = (String)it.next();
           PacketNumber[i] = PacketCounter.get(srcIps[i]);
           i++; 
           
       }
   }
   public void PacketLength(){
	   int i=0;
	   PacketLength=new float[PacketCounter.size()];
	   while(i<srcIps.length){
	    try {
	     int sumlength=0;
	     sql="SELECT length FROM `data` where srcIp='"+srcIps[i]+"'";
		 ResultSet rs=stmt.executeQuery(sql);
		  while(rs.next()){
			sumlength+=rs.getInt(1);
		  }
		 PacketLength[i]=(float)sumlength/PacketNumber[i];
		 i++;
	    } catch (SQLException e) {
		 e.printStackTrace();
	    }
	    
	   }
   }
   public void PrintData(){
	 int i=0;
	 System.out.println("源地址                    数据包数量          平均大小");
	 while(i<srcIps.length){
	   System.out.println(srcIps[i]+"     "+PacketNumber[i]+"           "+PacketLength[i]);
	   i++;
	 }
   }
   public void CloseConn(){
		try {
			conn.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		};
	}
}
