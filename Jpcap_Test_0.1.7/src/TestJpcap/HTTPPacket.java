package TestJpcap;
import java.util.HashMap;

public class HTTPPacket {
	byte[]data;
    String direction=null;
    StringBuffer Methoud;
    StringBuffer URL;
    StringBuffer Version;
    HashMap<String,String> Head;
    String Body=null;
    private int point =0;
    private String tempstr="";
    
    
	public HTTPPacket() {
		// TODO Auto-generated constructor stub
		 Head=new HashMap<String,String>();
		 Methoud=new StringBuffer();
		 URL=new StringBuffer();
		 Version=new StringBuffer();
	}
	public void Initial(byte[]data){
		this.data=data;
		this.setDirection();
		if(this.direction.equals("Request")){
			for(int i=0;i<3;i++){
				RowInformation(i,point);
			}
			
		}
		else if(this.direction.equals("Response")){
			System.out.println("Response!");
		}
		else{
			System.out.println("error!");
		}
	}
    public void setDirection(){
    	for(int i=0;i<4;i++){
    		tempstr=tempstr+(char)data[i];
    	}
    	if(tempstr.equals("HTTP")){
    		this.direction="Response";
    	}
    	else{
    		this.direction="Request";
    	}
    }
    
    public void RowInformation(int state,int point){
    	int tdata;
    	String tstr="";
    	String Hex=null;
    	do{
    	    //以下将byte数据转化为十六进制数（String格式）
    	    tdata=Byte.toUnsignedInt(data[point]);
            Hex=Integer.toHexString(tdata);
            if(Hex.equals("20")){
            	this.point=point+1;
            	break;
            }
            else if(Hex.equals("d")){
            	this.point=point+2;//0d0a 回车换行
            	break;
            }
            tstr=tstr+(char)data[point];
            point++;
    	}while(true);
    	switch (state){
    	    case 0:
    		    this.Methoud.append(tstr);
    		    break;
    	    case 1:
    	    	this.URL.append(tstr);
    		    break;
    	    case 2:
    	    	this.Version.append(tstr);
    		    break;
        }
    }
}
