package TestJpcap;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import jpcap.JpcapCaptor;
import jpcap.NetworkInterface;
import jpcap.NetworkInterfaceAddress;
import jpcap.packet.IPPacket;
import jpcap.packet.Packet;

import java.sql.Connection;  
import java.sql.DriverManager;  
import java.sql.ResultSet;  
import java.sql.Statement;  
  
public class DataBaseTest {
	Statement stmt ; 
	public DataBaseTest() {
	}
	public void LinkDB(){
		try {  
            Class.forName("com.mysql.cj.jdbc.Driver").newInstance();  
  
            String databaseName = "test";// 已经在MySQL数据库中创建好的数据库。  
            String userName = "root";// MySQL默认的root账户名  
            String password = "root";// 默认的root账户密码为空  
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + databaseName+"?useSSL=false&serverTimezone=UTC", userName, password);          
            stmt = conn.createStatement();
            if(conn!=null)
             System.out.println("连接数据库成功！");
            else
             System.out.println("连接数据库失败！");
		 } catch (Exception e) {  
	            e.printStackTrace();  
	     }  
	}
	public void InsertData(Packet packet){//写数据库前各项目分离
		Packet temppacket=packet;
	    String[] time=new String[2];
	    String[] ip=new String[2];
	    String protocol;
	    int length;
	    String[] chfield = packet.toString().split("\\s+");//以空格为分割，取出子字符串
	    time=GetTimes(chfield[0]);
	    ip=GetIps(chfield[1]);
	    protocol=GetProtocol(chfield[2]);
	    length=packet.len;

	    String sql;    
	    try {  
            int result;
                sql = "INSERT INTO data(time,mstime,srcIp,dscIp,protocol,length) VALUES("+time[0]+","+time[1]+",'"+ip[0]+"','"+ip[1]+"',"+protocol+","+length+")";  
       //         System.out.println(sql);
                result = stmt.executeUpdate(sql);        
        } catch (Exception e) {  
            e.printStackTrace();  
        }  
	}
	public String[] GetTimes(String chfield){//将含有时间戳的子字符串分割为秒和毫秒级两部分
		String[] time = new String[2];
        String times = chfield;    
        time[0] = times.split(":")[0];
        time[1] = times.split(":")[1];
		return time;
	}
	
	public String[] GetIps(String chfield){//将含有源地址和目的地址的子字符串分割为两个ip
		String[] ip = new String[2];
            String ips = chfield;
            String regexString="\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}";
            Pattern p = Pattern.compile(regexString);
            String parentString=ips;
            Matcher m = p.matcher(parentString);
            boolean result = m.find();
            int mycot=0;
            while(result) {
             if(mycot==0)
               ip[0]=m.group();
             else
               ip[1]=m.group();
             if(mycot==0)
               mycot++;
             else
               mycot=0;
             result = m.find();         
		}
		return ip;
	}
	public String GetProtocol(String chfield){//取出ip上层协议
		String protocol;
        protocol=chfield.substring(chfield.indexOf("(")+1, chfield.indexOf(")"));
		return protocol;
	}
}
